#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./server.sh [start|stop|restart|status]

PROJECT_DIR="/Users/kmc/projects/rec-system-services-geo-python"
PORT=8080
VENV_PATH="$PROJECT_DIR/venv"
LOG_FILE="$PROJECT_DIR/server.log"

cd "$PROJECT_DIR"

case "$1" in
    start)
        echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞..."
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ
        if lsof -Pi :$PORT -sTCP:LISTEN -t >/dev/null ; then
            echo "‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $PORT"
            PID=$(lsof -ti :$PORT)
            echo "   PID: $PID"
            exit 1
        fi
        
        # –ê–∫—Ç–∏–≤–∞—Ü–∏—è venv –∏ –∑–∞–ø—É—Å–∫
        source "$VENV_PATH/bin/activate"
        python main.py > "$LOG_FILE" 2>&1 &
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
        sleep 3
        
        if lsof -Pi :$PORT -sTCP:LISTEN -t >/dev/null ; then
            PID=$(lsof -ti :$PORT)
            echo "‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
            echo "   PID: $PID"
            echo "   URL: http://localhost:$PORT"
            echo "   –õ–æ–≥–∏: $LOG_FILE"
            echo ""
            echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:"
            curl -s http://localhost:$PORT/ | python3 -m json.tool 2>/dev/null || echo "   –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏..."
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"
            echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: tail -f $LOG_FILE"
            exit 1
        fi
        ;;
        
    stop)
        echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
        
        if lsof -Pi :$PORT -sTCP:LISTEN -t >/dev/null ; then
            PID=$(lsof -ti :$PORT)
            kill $PID
            echo "‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (PID: $PID)"
        else
            echo "‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
        ;;
        
    restart)
        echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞..."
        $0 stop
        sleep 2
        $0 start
        ;;
        
    status)
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
        echo ""
        
        if lsof -Pi :$PORT -sTCP:LISTEN -t >/dev/null ; then
            PID=$(lsof -ti :$PORT)
            echo "‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç"
            echo "   PID: $PID"
            echo "   Port: $PORT"
            echo ""
            echo "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ:"
            ps -p $PID -o pid,ppid,%cpu,%mem,etime,command | tail -n +2
            echo ""
            echo "API Health Check:"
            curl -s http://localhost:$PORT/ | python3 -m json.tool 2>/dev/null
        else
            echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
        ;;
        
    logs)
        echo "üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):"
        echo ""
        tail -f "$LOG_FILE"
        ;;
        
    *)
        echo "–°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status|logs}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  start    - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"
        echo "  stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"
        echo "  restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"
        echo "  status   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞"
        echo "  logs     - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä—ã:"
        echo "  ./server.sh start"
        echo "  ./server.sh status"
        echo "  ./server.sh restart"
        exit 1
        ;;
esac

exit 0


